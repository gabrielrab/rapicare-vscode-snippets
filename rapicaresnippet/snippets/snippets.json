{
	"CreateUseCase": {
		"scope": "javascript",
		"prefix": "rp-create",
		"body": [
			"const CreateEntityUseCase = require('src/core/app/useCases/CreateEntityUseCase');",
			"const ${1:NomeDaEntidade} = require('src/domain/entities/${1:NomeDaEntidade}');",
			"",
			"module.exports = class ${2:NomeDoUseCase} extends CreateEntityUseCase {",
			"  constructor({ ${3:NomeDoRepositorio} }) {",
			"    super();",
			"    this.entity = ${1:NomeDaEntidade};",
			"    this.repository = ${3:NomeDoRepositorio};",
			"  }",
			"};"
		],
		"description": "CreateUseCase"
	},
	"GetUseCase": {
		"scope": "javascript",
		"prefix": "rp-get",
		"body": [
			"const GetEntityUseCase = require('src/core/app/useCases/GetEntityUseCase');",
			"",
			"module.exports = class ${1:NomeDoUseCase} extends GetEntityUseCase {",
			"  constructor({ ${2:NomeDoRepositorio} }) {",
			"    super();",
			"    this.repository = ${2:NomeDoRepositorio};",
			"  }",
			"};"
		],
		"description": "GetUseCase"
	},
	"DeleteUseCase": {
		"scope": "javascript",
		"prefix": "rp-delete",
		"body": [
			"const DeleteEntityUseCase = require('src/core/app/useCases/DeleteEntityUseCase');",
			"",
			"module.exports = class ${1:NomeDoUseCase} extends DeleteEntityUseCase {",
			"  constructor({ ${2:NomeDoRepositorio} }) {",
			"    super();",
			"    this.repository = ${2:NomeDoRepositorio};",
			"  }",
			"};"
		],
		"description": "DeleteUseCase"
	},
	"ListUseCase": {
		"scope": "javascript",
		"prefix": "rp-list",
		"body": [
			"const ListEntityUseCase = require('src/core/app/useCases/ListEntityUseCase');",
			"",
			"module.exports = class ${1:NomeDoUseCase} extends ListEntityUseCase {",
			"  constructor({ ${2:NomeDoRepositorio} }) {",
			"    super();",
			"    this.repository = ${2:NomeDoRepositorio};",
			"  }",
			"};"
		],
		"description": "ListUseCase"
	},
	"UpdateUseCase": {
		"scope": "javascript",
		"prefix": "rp-update",
		"body": [
			"const UpdateEntityUseCase = require('src/core/app/useCases/UpdateEntityUseCase');",
			"",
			"module.exports = class ${1:NomeDoUseCase} extends UpdateEntityUseCase {",
			"  constructor({ ${2:NomeDoRepositorio} }) {",
			"    super();",
			"    this.repository = ${2:NomeDoRepositorio};",
			"  }",
			"};"
		],
		"description": "UpdateUseCase"
	},
	"CustomUseCase": {
		"scope": "javascript",
		"prefix": "rp-custom",
		"body": [
			"const UseCase = require('src/core/app/useCases/UseCase');",
			"",
			"class ${1:NomeDoUseCase} extends UseCase {",
			"  constructor({ ${2:NomeDoRepositorio} }) {",
			"    super();",
			"    this.repository = ${2:NomeDoRepositorio};",
			"  }",
			"",
			"async execute() {",
			"    try {",
			"      //code here",
			"      this.emit('SUCCESS', true);",
			"   } catch (error) {",
			"      this.emitErrors(error);",
			"    }",
			"    return true;",
			"  }",
			"}",
			"module.exports = ${1:NomeDoUseCase};"
		],
		"description": "CustomUseCase"
	},
	"Mapper": {
		"scope": "javascript",
		"prefix": "rp-mapper",
		"body": [
			"const ${1:Entidade} = require('src/domain/entities/${1:Entidade}');",
			"",
			"module.exports = {",
			"  toDomain(data) {",
			"    return new ${1:Entidade}(data);",
			"  },",
			"",
			"  toDatabase(data) {",
			"    return data.toJSON();",
			"  },",
			"};"
		],
		"description": "Mapper"
	},
	"Repositorio": {
		"scope": "javascript",
		"prefix": "rp-repository",
		"body": [
			"const Repository = require('src/core/infra/repos/Repository');",
			"const ${1:Mapper} = require('src/infra/mappers/${1:Mapper}');",
			"",
			"module.exports = class ${2:NomeDoRepositorio} extends Repository {",
			"  constructor({ ${3:Model}, currentUser }) {",
			"    super();",
			"    this.model = ${3:Model};",
			"    this.mapper = ${1:Mapper};",
			"    this.currentUser = currentUser;",
			"  }",
			"};"
		],
		"description": "Repositorio"
	}
}